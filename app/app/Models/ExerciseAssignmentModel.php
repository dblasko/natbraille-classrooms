<?php namespace App\Models;
use App\Classes\ExerciseEntity;
use App\Classes\PromotionEntity;
use CodeIgniter\Model;

class ExerciseAssignmentModel extends Model {
    protected $table = 'exerciseaffectation';
    protected $allowedFields = ['affectationIsoDate', 'idExo', 'idPromotion'];

    public function isExerciseAssigned(ExerciseEntity $e, PromotionEntity $p) {
        // TODO : confirm works well (data really null when no assignment)
        $data = $this->asArray()
            ->where(['idExo' => $e->getId(), 'idPromotion' => $p->getId()])
            ->first();
        return ($data != null);
    }

    public function syncExercises(PromotionEntity $promo) {
        // TODO : if issue of exercises inserting multiple times, may be because here we don't give an id to those who don't have one !
        // TODO : check if works correctly
        $promotionExerciseAffectations = $promo->getExerciseAssignations();
        $submissions = [];

        // 1. sync exercise affectations on the promotion
        foreach ($promotionExerciseAffectations as $exerciseAffectation) {
            $assignmentData = [
                'affectationIsoDate' => $exerciseAffectation['date'],
                'idExo' => $exerciseAffectation['exercise']->getId(),
                'idPromotion' => $promo->getId(),
            ];
            if (isset($exerciseAffectation['id'])) {
                // no id on new exercises, will be autogenerated
                // doing this allows us to not run useless queries on those already in the DB
                $assignmentData['id'] = $exerciseAffectation['id'];
                $submissions[] = ['assignmentId' => $exerciseAffectation['id'], 'submissions' => $exerciseAffectation['submissions']];
            }
            $this->save($assignmentData);
        }

        // 2. sync the exercise submissions list on the promotion
        $model = new SolutionSubmissionModel();
        $model->saveEntities($submissions);
    }
}